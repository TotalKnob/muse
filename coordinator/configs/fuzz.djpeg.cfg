[moriarty]
; compile_script=sefuzz-compile
target_bin=@target/afl-djpeg 
sync_dir=@target/muse-djpeg-sync
bitmodel=64
;recommend_edge_log if set, the selected edges will be recorded
; recommend_edge_log=@target/out-12-20-muse/.recommend.log
;moriarty will inovke each explorer $(max_instance) times
max_explorer_instance=1
batch_run_input_num=1
only_count_se_cov=true

[afl]
root=~/work/muse/AFL/
in_dir=@target/in
slave_num=1
; use_dict=@target/png.dict
use_ui=0

[qsym conc_explorer]
name=qsym
cmd=@target/djpeg-static-qsym
qsym_seed_dir=@target/qsym_in
max_time_per_seed=90

[switch oracle]
;fuzzing switching heuristic can be [random|saturate|driller_saturate]
strategy=random

[edge oracle]
;seed selecting heurisitic could be [rareness|tfidf|dom-tfidf|dom-rev-tfidf|random|san-guided|uncov-edge-bug|bug-potential|avg-bug-potential|meuzz] 
;use ':' to separate the heuristics, edge oracle will use them in round-robin 
heuristics=meuzz
meuzz_model_file=@target/.meuzz_model
;meuzz_init_data=@target/.meuzz
;ML algorithm could be [online_learning|random_forest|ensemble]
meuzz_variant=online_learning
meuzz_use_ramfs=true

[auxiliary info]
;if using dom-* and meuzz, should specify bbl_dom_map location
bbl_bug_map=@target/djpeg.reach.bug
bbl_cov_map=@target/djpeg.reach.cov
cov_edge_file=@target/.coverage_djpeg_combination
;if using san-guided or uncov-edge-bug, should specify sanitizer_edge_map location
; bug_edge_file=@target/.savior_sanitize_combination
pair_edge_file=@target/djpeg.edge
# Need to specify the correct way to replay input with instrumented binary
replay_prog_cmd=@target/dyninst-djpeg
data_store_file=@target/.meuzz
